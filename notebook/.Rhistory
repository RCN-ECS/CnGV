mtext("EA", side=1, line=1, adj=0, col="blue")
points(0:1, c(a[3:4]),  type="l", col="darkgreen", xlab="", lwd=1, lty=2)
mtext("EB", side=1, line=1, adj=0.66, col="darkgreen")
D_H <- a[1] - a[4]
(D_EA <- a[1]-a[2])
(D_EB <- a[3]-a[4])
(D_E <- mean(c(D_EA, D_EB)))
text(1.1,(a[1]+a[4])/2,"D_H", cex=1)
arrows(1.2,a[4], 1.2, a[1], length=0.1)
text(1.4, mean(c(a[2], a[4])), "D_E", cex=1)
arrows(1.3, mean(c(a[2], a[4])),
1.3, mean(c(a[2], a[4]))+D_E,
length=0.1)
PL <- D_E/D_H
text(1,-1.9,paste("PL =",PL),adj=1)
text(0,2, letr)
return(data.frame(D_H=D_H, D_EA = D_EA,
D_EB=D_EB,D_E=D_E, PL=PL))
}
final_1 <- rbind(case1, case2, case3, case4, case5, case6)
# Make plot
#pdf("")
par(mfrow=c(3,2), mar=c(3,1,1,1), oma=c(0,3,0,0))
a <- makeplot(case1, "A", "Case 1")
b <- makeplot(case2, "B", "Case 2")
c <- makeplot(case3, "C", "Case 3")
d <- makeplot(case4, "D", "Case 4")
e <- makeplot(case5, "E", "Case 5")
f <- makeplot(case6, "F", "Case 6")
mtext("Standardized phenotype", side=2,
outer=TRUE, line=1)
#dev.off()
final_2 <- rbind(a,b,c,d,e, f)
(final <- cbind(final_1, final_2))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
makeplot <- function(a, letr, main){
plot(0:1, c(a[1:2]), ylim=c(-2,2),
xaxt ="n", type="l", col="blue", xlab="",
ylab="Stnd. phenotype", bty="l",
main=main, lwd=2, xlim=c(0,1.5))
mtext("EA", side=1, line=1, adj=0, col="blue")
points(0:1, c(a[3:4]),  type="l", col="orange", xlab="", lwd=1, lty=2)
mtext("EB", side=1, line=1, adj=0.66, col="orange")
D_H <- a[1] - a[4]
(D_EA <- a[1]-a[2])
(D_EB <- a[3]-a[4])
(D_E <- mean(c(D_EA, D_EB)))
text(1.1,(a[1]+a[4])/2,"D_H", cex=1)
arrows(1.2,a[4], 1.2, a[1], length=0.1)
text(1.4, mean(c(a[2], a[4])), "D_E", cex=1)
arrows(1.3, mean(c(a[2], a[4])),
1.3, mean(c(a[2], a[4]))+D_E,
length=0.1)
PL <- D_E/D_H
text(1,-1.9,paste("PL =",PL),adj=1)
text(0,2, letr)
return(data.frame(D_H=D_H, D_EA = D_EA,
D_EB=D_EB,D_E=D_E, PL=PL))
}
# Chunk 3: cars
# Case 1
case1 <- rep(NA, 4)
names(case1) <- c("PAEA", "PAEB", "PBEA", "PBEB")
a <- 0
case1[1:4] <- c(a,a+1,a-1+0.01,a+0.01)
case1
# Case 2
case2 <- rep(NA, 4)
names(case2) <- names(case1)
a <- 0
case2[1:4] <- c(a,a+1,a-1-0.01,a-0.01)
case2
# Chunk 4
case3 <- rep(NA, 4)
names(case3) <- names(case1)
case3[1:4] <- c(1,-1,0,0)
case4 <- rep(NA, 4)
names(case4) <- names(case1)
case4[1:4] <- c(-1.2, +1.4, +0.5,  -0.3)
# Chunk 5
case5 <- rep(NA, 4)
names(case5) <- names(case1)
case6 <- case5
case5[1:4] <- c(-0.1, 0.1, -0.15, 0.15)
case6[1:4] <- c(-1, 1, -1.05, 1.05)
final_1 <- rbind(case1, case2, case3, case4, case5, case6)
# Make plot
#pdf("")
par(mfrow=c(3,2), mar=c(3,1,1,1), oma=c(0,3,0,0))
a <- makeplot(case1, "A", "Case 1")
b <- makeplot(case2, "B", "Case 2")
c <- makeplot(case3, "C", "Case 3")
d <- makeplot(case4, "D", "Case 4")
e <- makeplot(case5, "E", "Case 5")
f <- makeplot(case6, "F", "Case 6")
mtext("Standardized phenotype", side=2,
outer=TRUE, line=1)
#dev.off()
final_2 <- rbind(a,b,c,d,e, f)
(final <- cbind(final_1, final_2))
case7 <- case5
case5 <- rep(NA, 4)
names(case5) <- names(case1)
case6 <- case5
case7 <- case5
case5[1:4] <- c(-0.1, 0.1, -0.15, 0.15)
case6[1:4] <- c(-1, 1, -1.05, 1.05)
makeplot(case7)
case7 <- case5
case7[3:4] <- case5[3:4] + 0.1
makeplot(case7)
case7[3:4] <- case5[3:4] + 1
makeplot(case7)
case6 <- case5
case7 <- case5
case5[1:4] <- c(-0.1, 0.1, -0.15, 0.15)
case6[1:4] <- c(-1, 1, -1.05, 1.05)
case7 <- case5
case7[3:4] <- case5[3:4] + 1
makeplot(case7, "","")
case7[3:4] <- case5[3:4] + 0.1
makeplot(case7, "","")
case5[3:4] + 0.1
case5
case7 <- case5
case7[3:4] <- case5[3:4] + 0.1
makeplot(case7, "","")
case7[3:4] <- case5[3:4] + 0.2
makeplot(case7, "","")
# Make plot
#pdf("")
par(mfrow=c(3,2), mar=c(3,1,1,1), oma=c(0,3,0,0))
a <- makeplot(case1, "A", "Case 1")
b <- makeplot(case2, "B", "Case 2")
c <- makeplot(case3, "C", "Case 3")
d <- makeplot(case4, "D", "Case 4")
e <- makeplot(case5, "E", "Case 5")
f <- makeplot(case6, "F", "Case 6")
case8 <- case4
case8[3:4] <- case4[3:4] + 1
makeplot(case8, "","")
case8[3:4] <- case4[3:4] + 2
makeplot(case8, "","")
case8[3] <- 0
makeplot(case8, "","")
case8 <- case4
case8[3:4] <- case4[3:4] + 2
case8[3] <- 2
makeplot(case8, "","")
case8 <- case4
case8[3:4] <- 2
makeplot(case8, "","")
case8 <- case4
case8[3:4] <- -1
makeplot(case8, "","")
case8[3:4] <- 0
makeplot(case8, "","")
case8 <- case4
case8[3:4] <- 0
makeplot(case8, "","")
case8[3:4] <- 0.1
makeplot(case8, "","")
case4[1:4] <- c(-1.2, +1.4, +0.1,  -0.1)
case5 <- rep(NA, 4)
names(case5) <- names(case1)
case6 <- case5
case7 <- case5
case5[1:4] <- c(-0.1, 0.1, -0.15, 0.15)
case6[1:4] <- c(-1, 1, -1.05, 1.05)
```{r, fig.height=8}
final_1 <- rbind(case1, case2, case3, case4, case5, case6)
# Make plot
#pdf("")
par(mfrow=c(3,2), mar=c(3,1,1,1), oma=c(0,3,0,0))
a <- makeplot(case1, "A", "Case 1")
b <- makeplot(case2, "B", "Case 2")
c <- makeplot(case3, "C", "Case 3")
d <- makeplot(case4, "D", "Case 4")
e <- makeplot(case5, "E", "Case 5")
f <- makeplot(case6, "F", "Case 6")
case8[1:2] <- case1[1:2]+1
makeplot(case8, "","")
# Case 1
case1 <- rep(NA, 4)
names(case1) <- c("PAEA", "PAEB", "PBEA", "PBEB")
a <- 0
case1[1:4] <- c(a,a+1,a-1+0.01,a+0.01)
case1
case8 <- case1
case8[1:2] <- case1[1:2]+1
makeplot(case8, "","")
case8 <- case2
case8[1:2] <- case1[1:2]+1
case8[1:2] <- case2[1:2]+1
makeplot(case8, "","")
case8 <- case2
case8[1:2] <- case2[1:2]+2
makeplot(case8, "","")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
powdf <- read.csv("../results/Results_10.06.2020/Archive/Power_output_results.csv")
vardf <- read.csv("../results/Results_10.06.2020/Archive/Variance_output_results.csv")
PLdf <- read.csv("../results/Results_10.06.2020/Archive/PL_output_results.csv")
phendf <- read.csv("../results/Results_10.06.2020/Archive/phenotype_output_results.csv")
head(powdf)
head(vardf)
head(PLdf)
head(phendf)
dim(powdf)
dim(vardf)
dim(PLdf)
summary(powdf$row)
levels(as.factor(powdf$replicate))
summary(vardf$row)
summary(PLdf$row)
sum(!complete.cases(phendf))
dim(phendf)
# Chunk 3
cases <- powdf$row[powdf$n_env==2 & powdf$n_pop==2]
length(cases)
powdf2 <- powdf[powdf$row %in% cases,]
vardf2 <- vardf[vardf$row %in% cases,]
dim(powdf2)
head(PLdf)
newdf <- merge(powdf2, PLdf, by = "row")
dim(newdf)
str(newdf)
newdf$G1E1mean <- NA
newdf$G1E2mean <- NA
newdf$G2E1mean <- NA
newdf$G2E2mean <- NA
# to do: calc from phendf
i = 1001
cond <- which(phendf$row==i)
tapply(phendf$phen_corrected[cond],as.character(phendf$GE_factor[cond]), mean, na.rm=TRUE)
# Chunk 4
## compare covariance and PL
plot(newdf$covariance.x, newdf$PL)
plot(newdf$covariance.x, newdf$PL, ylim=c(-1,2))
abline(1,0)
abline(0,0)
abline(v=0)
# this tells me that their claims that counter > 1 or <0 and cogradient between 0 and 1 is correct
# Compare covariance and GxE
plot(newdf$GxE_emm.x, newdf$PL)
plot(newdf$GxE_emm.x, newdf$PL, ylim=c(-1,2))
plot(newdf$GxE_eta, newdf$PL, ylim=c(-1,2))
summary(newdf$GxE_eta)
# this tells me there PL metric has no relationship
# with GxE
plot(newdf$GxE_emm.x, newdf$GxE_omega)
# compare dela_E and new PL
plot(newdf$delta_E, newdf$PL, ylim=c(-1,2))
# when delta_E is large, there is plasticity
# when delta_E = 0, there is no plasticity or there is GxE
# not very useful. It shows that PL is near 0 when delta_e is 0
# compare genetic differentiation and PL
# denominator of PL minus the numerator is the average difference in phenotype between genotypes raised in a common environment (0.5((PAEA−PBEA)+(PAEB−PBEB))), and is therefore a measure of genetic differentiation.”
plot(newdf$G1Emean - newdf$G2Emean, newdf$delta_E-newdf$delta_H)
plot(abs(newdf$G1Emean - newdf$G2Emean), abs(newdf$delta_E-newdf$delta_H))
plot(newdf$GxE_emm.x, newdf$delta_E-newdf$delta_H)
setwd("/Users/lotterhos/Documents/GitHub/CnGV/notebook")
cases <- powdf$row[powdf$n_env==2 & powdf$n_pop==2]
length(cases)
powdf2 <- powdf[powdf$row %in% cases,]
vardf2 <- vardf[vardf$row %in% cases,]
dim(powdf2)
head(PLdf)
newdf <- merge(powdf2, PLdf, by = "row")
dim(newdf)
str(newdf)
newdf$G1E1mean <- NA
newdf$G1E2mean <- NA
newdf$G2E1mean <- NA
newdf$G2E2mean <- NA
# to do: calc from phendf
i = 1001
cond <- which(phendf$row==i)
tapply(phendf$phen_corrected[cond],as.character(phendf$GE_factor[cond]), mean, na.rm=TRUE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
powdf <- read.csv("../results/Results_10.06.2020/Archive/Power_output_results.csv")
vardf <- read.csv("../results/Results_10.06.2020/Archive/Variance_output_results.csv")
PLdf <- read.csv("../results/Results_10.06.2020/Archive/PL_output_results.csv")
phendf <- read.csv("../results/Results_10.06.2020/Archive/phenotype_output_results.csv")
head(powdf)
head(vardf)
head(PLdf)
head(phendf)
dim(powdf)
dim(vardf)
dim(PLdf)
summary(powdf$row)
levels(as.factor(powdf$replicate))
summary(vardf$row)
summary(PLdf$row)
sum(!complete.cases(phendf))
dim(phendf)
cases <- powdf$row[powdf$n_env==2 & powdf$n_pop==2]
length(cases)
powdf2 <- powdf[powdf$row %in% cases,]
vardf2 <- vardf[vardf$row %in% cases,]
dim(powdf2)
head(PLdf)
newdf <- merge(powdf2, PLdf, by = "row")
dim(newdf)
str(newdf)
newdf$G1E1mean <- NA
newdf$G1E2mean <- NA
newdf$G2E1mean <- NA
newdf$G2E2mean <- NA
# to do: calc from phendf
i = 1001
cond <- which(phendf$row==i)
tapply(phendf$phen_corrected[cond],as.character(phendf$GE_factor[cond]), mean, na.rm=TRUE)
## compare covariance and PL
plot(newdf$covariance.x, newdf$PL)
plot(newdf$covariance.x, newdf$PL, ylim=c(-1,2))
abline(1,0)
abline(0,0)
abline(v=0)
# this tells me that their claims that counter > 1 or <0 and cogradient between 0 and 1 is correct
# Compare covariance and GxE
plot(newdf$GxE_emm.x, newdf$PL)
plot(newdf$GxE_emm.x, newdf$PL, ylim=c(-1,2))
plot(newdf$GxE_eta, newdf$PL, ylim=c(-1,2))
summary(newdf$GxE_eta)
# this tells me there PL metric has no relationship
# with GxE
plot(newdf$GxE_emm.x, newdf$GxE_omega)
# compare dela_E and new PL
plot(newdf$delta_E, newdf$PL, ylim=c(-1,2))
# when delta_E is large, there is plasticity
# when delta_E = 0, there is no plasticity or there is GxE
# not very useful. It shows that PL is near 0 when delta_e is 0
# compare genetic differentiation and PL
# denominator of PL minus the numerator is the average difference in phenotype between genotypes raised in a common environment (0.5((PAEA−PBEA)+(PAEB−PBEB))), and is therefore a measure of genetic differentiation.”
plot(newdf$G1Emean - newdf$G2Emean, newdf$delta_E-newdf$delta_H)
plot(abs(newdf$G1Emean - newdf$G2Emean), abs(newdf$delta_E-newdf$delta_H))
plot(newdf$GxE_emm.x, newdf$delta_E-newdf$delta_H)
# Compare covariance and GxE
plot(newdf$GxE_emm.x, newdf$PL)
## compare covariance and PL
plot(newdf$covariance.x, newdf$PL)
plot(newdf$covariance.x, newdf$PL, ylim=c(-1,2))
abline(1,0)
abline(0,0)
abline(v=0)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
powdf <- read.csv("../results/Results_10.06.2020/Archive/Power_output_results.csv")
vardf <- read.csv("../results/Results_10.06.2020/Archive/Variance_output_results.csv")
PLdf <- read.csv("../results/Results_10.06.2020/Archive/PL_output_results.csv")
phendf <- read.csv("../results/Results_10.06.2020/Archive/phenotype_output_results.csv")
head(powdf)
head(vardf)
head(PLdf)
head(phendf)
dim(powdf)
dim(vardf)
dim(PLdf)
summary(powdf$row)
levels(as.factor(powdf$replicate))
summary(vardf$row)
summary(PLdf$row)
sum(!complete.cases(phendf))
dim(phendf)
# Chunk 3
cases <- powdf$row[powdf$n_env==2 & powdf$n_pop==2]
length(cases)
powdf2 <- powdf[powdf$row %in% cases,]
vardf2 <- vardf[vardf$row %in% cases,]
dim(powdf2)
head(PLdf)
newdf <- merge(powdf2, PLdf, by = "row")
dim(newdf)
str(newdf)
newdf$G1E1mean <- NA
newdf$G1E2mean <- NA
newdf$G2E1mean <- NA
newdf$G2E2mean <- NA
# to do: calc from phendf
i = 1001
cond <- which(phendf$row==i)
tapply(phendf$phen_corrected[cond],as.character(phendf$GE_factor[cond]), mean, na.rm=TRUE)
# Chunk 4
## compare covariance and PL
plot(newdf$covariance.x, newdf$PL)
plot(newdf$covariance.x, newdf$PL, ylim=c(-1,2))
abline(1,0)
abline(0,0)
abline(v=0)
# this tells me that their claims that counter > 1 or <0 and cogradient between 0 and 1 is correct
# Compare covariance and GxE
plot(newdf$GxE_emm.x, newdf$PL)
plot(newdf$GxE_emm.x, newdf$PL, ylim=c(-1,2))
plot(newdf$GxE_eta, newdf$PL, ylim=c(-1,2))
summary(newdf$GxE_eta)
# this tells me there PL metric has no relationship
# with GxE
plot(newdf$GxE_emm.x, newdf$GxE_omega)
# compare dela_E and new PL
plot(newdf$delta_E, newdf$PL, ylim=c(-1,2))
# when delta_E is large, there is plasticity
# when delta_E = 0, there is no plasticity or there is GxE
# not very useful. It shows that PL is near 0 when delta_e is 0
# compare genetic differentiation and PL
# denominator of PL minus the numerator is the average difference in phenotype between genotypes raised in a common environment (0.5((PAEA−PBEA)+(PAEB−PBEB))), and is therefore a measure of genetic differentiation.”
plot(newdf$G1Emean - newdf$G2Emean, newdf$delta_E-newdf$delta_H)
plot(abs(newdf$G1Emean - newdf$G2Emean), abs(newdf$delta_E-newdf$delta_H))
plot(newdf$GxE_emm.x, newdf$delta_E-newdf$delta_H)
# Chunk 5
b <- which(abs(round(newdf$PL)) > 100)
newdf[b,]
newdf[b,c("row","PL")]
# Chunk 6
head(newdf)
a<- which(round(newdf$PL,1)==1.0 & newdf$GxE_omega > 0.6)
newdf[a,]
# Chunk 7
i1 = 425
i1 <- 17238
i1 <- 16425
# from phendf, get phenotype values
cond1 <- which(newdf$row==i1)
newdf[cond1,]
cond <- which(phendf$row==i1)
a<- tapply(phendf$phen_corrected[cond],as.character(phendf$GE_factor[cond]), mean, na.rm=TRUE)
a
plot(0:1, c(a[1:2]), ylim=c(-3,3), xaxt ="n", type="l", col="blue", xlab="", ylab="Standardized phenotype")
mtext("E1", side=1, line=0, adj=0, col="blue")
points(0:1, c(a[3:4]), ylim=c(-3,3), xaxt ="n", type="l", col="green", xlab="")
mtext("E2", side=1, line=0, adj=1, col="green")
text(0.3,a[1],"D_H", cex=0.5)
arrows(0.4,a[1], 0.4, a[4], length=0.1)
text(0.6, a[1], "D_E", cex=0.5)
arrows(0.5, 0, 0.5, -newdf[cond1,"delta_E"], length=0.1)
head(powdf)
head(vardf)
# effect sizes
plot(powdf$covariance,
vardf$omega2[vardf$Variance_Component=="V_cov"],
pch=19,
col=adjustcolor("blue",0.05))
# P-values
plot(powdf$covariance_pvalue,
vardf$Pvalue[vardf$Variance_Component=="V_cov"],
pch=19,
col=adjustcolor("blue",0.05))
# p-values from the variance components are not to be trusted. Put on side burner for now.
plot(powdf$GxE_eta,
vardf$omega2[vardf$Variance_Component=="V_gxe"],
pch=19,
col=adjustcolor("blue",0.1))
abline(0,1)
# vardf$omega is actually eta
barplot(vardf$omega2[cond],
names= vardf$Variance_Component[cond],
beside=FALSE,
col=colr, las=2, xlab="", ylab="omega^2")
cond <- vardf$row==1001
vardf[cond,]
colr = c(grey(0.1), grey(.3), grey(.50), grey(.70), grey(.90))
barplot(vardf$omega2[cond],
names= vardf$Variance_Component[cond],
beside=FALSE,
col=colr, las=2, xlab="", ylab="omega^2")
barplot(matrix(c(vardf$omega2[cond], rep(0,5)), ncol=2),
xlim=c(0,2),
beside=FALSE,
col=colr, las=2, xlab="", ylab="omega^2")
legend("right",legend = rev(vardf$Variance_Component[cond]), fill=rev(colr))
# effect sizes
plot(powdf$covariance,
vardf$omega2[vardf$Variance_Component=="V_cov"],
pch=19,
col=adjustcolor("blue",0.05))
plot(powdf$covariance,
vardf$omega2[vardf$Variance_Component=="V_g"],
pch=19,
col=adjustcolor("blue",0.05))
plot(powdf$covariance,
vardf$omega2[vardf$Variance_Component=="V_e"],
pch=19,
col=adjustcolor("blue",0.05))
plot(powdf$covariance,
vardf$omega2[vardf$Variance_Component=="V_gxe"],
pch=19,
col=adjustcolor("blue",0.05))
plot(powdf$GxE_emm,
vardf$omega2[vardf$Variance_Component=="V_gxe"],
pch=19,
col=adjustcolor("blue",0.05))
plot(powdf$GxE_eta,
vardf$omega2[vardf$Variance_Component=="V_gxe"],
pch=19,
col=adjustcolor("blue",0.1))
abline(0,1)
barplot(vardf$omega2[cond],
names= vardf$Variance_Component[cond],
beside=FALSE,
col=colr, las=2, xlab="", ylab="omega^2")
barplot(matrix(c(vardf$omega2[cond], rep(0,5)), ncol=2),
xlim=c(0,2),
beside=FALSE,
col=colr, las=2, xlab="", ylab="omega^2")
legend("right",legend = rev(vardf$Variance_Component[cond]), fill=rev(colr))
